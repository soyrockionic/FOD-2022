program Ej8P3;
Uses crt, sysutils;
const
  valorAlto = '9999';
type

  distro = record
    nombre : String[50];
    anio : String[10];
    version : String[5];
    CantDes : integer;
    descripcion : String[50];
  end;

  archivo = file of distro;

procedure leerDistro(var reg : distro);
begin
  write('Ingrese nombre de la distribucion ');
  readln(reg.nombre);
  write('Ingrese anio de lanzamiento ');
  readln(reg.anio);
  write('Ingrese version del kernel ');
  readln(reg.version);
  write('Ingrese cantidad de desarrolladores ');
  readln(reg.cantDes);
  write('Ingrese descripcion ');
  readln(reg.descripcion);
end;

procedure leer(var arch : archivo; var reg : distro);
begin
  if(not eof(arch)) then
    read(arch,reg)
  else
    reg.nombre := valorAlto;
end;

function ExisteDistribucion(var arch : archivo; reg : distro) : boolean;
var
  aux : distro;
begin
  leer(arch,aux);
  while(aux.nombre <> valorAlto) and (aux.nombre <> reg.nombre) do
    leer(arch,aux);
  if(aux.nombre = reg.nombre) then
    ExisteDistribucion := true
  else
    ExisteDistribucion := false;
end;

procedure AltaDistribucion(var arch : archivo);
var
  reg, aux : distro;
  pos : integer;
begin
  reset(arch);
  leerDistro(reg);
  if(ExisteDistribucion(arch,reg)) then
    writeln('Ya existe la distribucion')
  else begin
    seek(arch,0);
    leer(arch,aux);
    if(aux.cantDes < 0) then begin
      pos := aux.cantDes*-1;
      seek(arch,pos);
      leer(arch,aux);
      seek(arch,pos);
      write(arch,reg);
      seek(arch,0);
      write(arch,aux);
    end
    else begin
      seek(arch,filesize(arch));
      write(arch,reg);
    end;
  end;
  close(arch);
end;

procedure imprimir(var arch : archivo);
var
  reg : distro;
begin
  reset(arch);
  leer(arch,reg);
  while(reg.nombre <> valorAlto) do begin
    writeln(reg.nombre,' ',reg.anio,' ',reg.version,' ',reg.cantDes,' ',reg.descripcion);
    leer(arch,reg);
  end;
  close(arch);
end;

procedure BajaDistribucion(var arch : archivo);
var
  reg, aux : distro;
  pos : integer;
begin
  reset(arch);
  write('Ingrese la distribucion que desea eliminar ');
  readln(aux.nombre);
  if(ExisteDistribucion(arch,aux)) then begin
    pos := filepos(arch)-1;
    seek(arch,pos);
    leer(arch,reg);
    seek(arch,0);
    leer(arch,aux);
    seek(arch,0);
    reg.cantDes := pos*-1;
    write(arch,reg);
    seek(arch,pos);
    write(arch,aux);
  end
  else
    writeln('Distribucion no existente');
  close(arch);
end;

var
  arch : archivo;
  n : String[25];
  op : String[2];
begin
  clrscr;

  write('Ingrese nombre del archivo ');
  readln(n);

  assign(arch,n);

  writeln('a : agregar una distribucion nueva');
  writeln('b : dar de baja una distribucion existente');
  readln(op);

  case op of
    'a' : begin
            AltaDistribucion(arch);
            writeln;
            imprimir(arch);
          end;
    'b' : begin
            BajaDistribucion(arch);
            writeln;
            imprimir(arch);
          end;
  end;

  readln;
end.
