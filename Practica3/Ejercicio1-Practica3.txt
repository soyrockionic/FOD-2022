program Ej1P3;
Uses crt, SysUtils;
const
  valorAlto = 9999;
type

  empleado = record
    nro : integer;
    apellido : String[20];
    nombre : String[20];
    edad : integer;
    dni : String[8];
  end;

  archivo = file of empleado;

procedure leer(var reg : empleado);
begin
  write('Ingrese apellido: ');
  readln(reg.apellido);
  if(reg.apellido <> 'fin') then begin
    write('Ingrese codigo: ');
    readln(reg.nro);
    write('Ingrese nombre: ');
    read(reg.nombre);
    write('Ingrese edad: ');
    readln(reg.edad);
    write('Ingrese dni: ');
    readln(reg.dni);
  end;
end;

procedure cargarArchivo(var arch : archivo);
var
  reg : empleado;
begin
  rewrite(arch);
  leer(reg);
  while(reg.apellido <> 'fin') do begin
    write(arch, reg);
    leer(reg);
  end;
  close(arch);
end;

procedure imprimir(reg : empleado);
begin
  writeln(Format('%-4d | %-10s | %-10s | %4d | %4s', [reg.nro,reg.nombre,reg.apellido,reg.edad,reg.dni]));
end;

procedure empleadosConDatoIngresado(var arch : archivo);
var
  reg : empleado;
  dato : String[20];
begin
  clrscr;
  write('Ingrese nombre o apellido para filtrar ');
  readln(dato);
  writeln('------------------------------------------------');
  reset(arch);
  while(not eof(arch)) do begin
    read(arch, reg);
    if(reg.nombre = dato) then
      imprimir(reg);
  end;
  close(arch);
end;

procedure todosLosEmpleados(var arch : archivo);
var
  reg : empleado;
begin
  clrscr;
  writeln('------------------------------------------------');
  reset(arch);
  while(not eof(arch)) do begin
    read(arch, reg);
    imprimir(reg);
  end;
  close(arch);
end;

procedure ProntoAJubilarse(var arch : archivo);
var
  reg : empleado;
begin
  clrscr;
  writeln('------------------------------------------------');
  reset(arch);
  while(not eof(arch)) do begin
    read(arch, reg);
    if(reg.edad > 70) then
      imprimir(reg);
  end;
  close(arch);
end;

procedure agregarNuevosEmpleados(var arch : archivo);
var
  reg : empleado;
begin
  reset(arch);
  leer(reg);
  seek(arch,filesize(arch));
  while(reg.apellido <> 'fin') do begin
    write(arch,reg);
    leer(reg);
  end;
  close(arch);
end;

procedure modificarEdad(var arch : archivo);
var
  reg : empleado;
  cod : integer;
begin
  reset(arch);
  write('Ingrese el codigo del empleado ');
  readln(cod);
  while(cod <> -1) do begin
    read(arch, reg);
    while(not eof(arch)) and (reg.nro <> cod) do
      read(arch, reg);
    if(reg.nro = cod) then begin
      write('Ingrese la nueva edad ');
      readln(reg.edad);
      seek(arch, filepos(arch)-1);
      write(arch, reg);
    end;
    seek(arch, 0);
    write('Ingrese el codigo del empleado ');
    readln(cod);
  end;
  close(arch);
end;

procedure exportarArchivo(var arch : archivo);
var
  reg : empleado;
  carga : text;
begin
  assign(carga, '001todos_empleados.txt');
  rewrite(carga);
  reset(arch);
  while(not eof(arch)) do begin
    read(arch, reg);
    writeln(carga, reg.nro,' ',reg.nombre,' ',reg.apellido,' ', reg.edad,' ', reg.dni);
  end;
  close(carga);
  close(arch);
end;

procedure empleadosSinDni(var arch : archivo);
var
  carga : text;
  reg : empleado;
begin
  assign(carga, 'faltaDniEmpleado.txt');
  reset(arch);
  rewrite(carga);
  while(not eof(arch)) do begin
    read(arch, reg);
    if(reg.dni = '00') then begin
      write(carga, reg.nro,' ',reg.nombre,' ',reg.apellido,' ',reg.edad,' ',reg.dni);
    end;
  end;
  close(carga);
  close(arch);
end;

procedure eliminarRegistros(var arch : archivo);
var
  reg, aux : empleado;
  cod : integer;
begin
  write('Ingrese codigo o -1 para salir ');
  readln(cod);
  while(cod <> -1) do begin
    reset(arch);
    seek(arch,filesize(arch)-1);
    read(arch,aux);
    seek(arch,0);
    read(arch,reg);
    while(not eof(arch)) and (reg.nro <> cod) do
      read(arch,reg);
    if(reg.nro = cod) then begin
      seek(arch,filepos(arch)-1);
      write(arch,aux);
      seek(arch,filesize(arch)-1);
      truncate(arch);
    end
    else
      writeln('El codigo ingresado no existe');
    close(arch);
    write('Ingrese codigo o -1 para salr ');
    readln(cod);
  end;
end;

procedure procesarArchivo(var arch : archivo);
var
  op : char;
begin
  writeln();
  writeln('1 : lista de empleados con el dato ingresado');
  writeln('2 : lista de todos los empleados');
  writeln('3 : lista de los empleados pronto a jubilarse');
  writeln('4 : agregar nuevos empleados');
  writeln('5 : modificar edad');
  writeln('6 : exportar a un txt');
  writeln('7 : empleados sin dni');
  writeln('8 : eminar registros');
  writeln();
  write('Ingrese que eperacion desea ');
  readln(op);
  case op of
    '1' : empleadosConDatoIngresado(arch);
    '2' : todosLosEmpleados(arch);
    '3' : ProntoAJubilarse(arch);
    '4' : agregarNuevosEmpleados(arch);
    '5' : modificarEdad(arch);
    '6' : exportarArchivo(arch);
    '7' : empleadosSinDni(arch);
    '8' : eliminarRegistros(arch);
  end;
end;

var
  arch : archivo;
  n : String[20];
  op : char;
begin
  clrscr;

  write('Ingrese el nombre del archivo ');
  readln(n);

  assign(arch, n);

  writeln('a cargar el archivo');
  writeln('b procesar el archivo');
  readln(op);
  case op of
    'a' : cargarArchivo(arch);
    'b' : procesarArchivo(arch);
  end;

  readln;
end.
