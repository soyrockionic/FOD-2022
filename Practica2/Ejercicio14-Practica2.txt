program Ej14_p2;
Uses crt, sysUtils;
const
  valorAlto = '~~~~~~';
type

  vuelo = record
    destino : String[12];
    fecha : String[12];
    hora : String[12];
    cantAsientos : integer;
  end;

  venta = record
    destino : String[12];
    fecha : String[12];
    hora : String[12];
    asientosVen : integer;
  end;

  maestro = file of vuelo;

  detalle = file of venta;

  reglista = record
    destino : String[12];
    fecha : String[12];
    hora : String[12];
  end;

  lista = ^nodo;

  nodo = record
    dato : reglista;
    sig : lista;
  end;

procedure leervuelo(var reg : vuelo);
begin
  write('Ingrese destino ');
  readln(reg.destino);
  write('Ingrese fecha ');
  readln(reg.fecha);
  write('Ingrese hora ');
  readln(reg.hora);
  write('Ingrese cantidad de asientos ');
  readln(reg.cantAsientos);
end;

procedure cargarArchivo(var mae : maestro);
var
  i : integer;
  reg : vuelo;
begin
  rewrite(mae);
  for i := 1 to 3 do begin
    leervuelo(reg);
    write(mae, reg);
  end;
  close(mae);
end;

procedure leerVenta(var reg : venta);
begin
  write('Ingrese destino ');
  readln(reg.destino);
    if(reg.destino <> valorAlto) then begin
    write('Ingrese fecha ');
    readln(reg.fecha);
    write('Ingrese hora ');
    readln(reg.hora);
    write('Ingrese cantidad de asientos vendidos ');
    readln(reg.asientosVen);
  end;
end;

procedure cargarDetalle(var det : detalle);
var
  reg : venta;
begin
  rewrite(det);
  leerVenta(reg);
  while(reg.destino <> 'aero') do begin
    write(det,reg);
    leerVenta(reg);
  end;
  close(det);
end;

procedure leer(var det : detalle; var regD : venta);
begin
  if(not eof(det)) then
    read(det, regD)
  else begin
    regD.destino := valorAlto;
    end;
end;

procedure minimo(var det1, det2 : detalle; var regD1, regD2 : venta; var min : venta);
begin
  if(regD1.destino <= regD2.destino) then begin
    min := regD1;
    leer(det1,regD1);
  end
  else begin
    min := regD2;
    leer(det2,regD2);
  end;
end;

procedure actualizarArchivo(var mae : maestro; var det1, det2 : detalle);
var
  i : integer;
  regM : vuelo;
  regD1, regD2 : venta;
  min : venta;
begin
  reset(mae);
  reset(det1);
  reset(det2);
  leer(det1,regD1);
  leer(det2,regD2);

  minimo(det1,det2,regD1,regD2,min);
  while(min.destino <> valorAlto) do begin

    read(mae, regM);

    while(regM.destino <> min.destino) do
      read(mae, regM);

    while(min.destino = regM.destino) do begin
      regM.cantAsientos := regM.cantAsientos - min.asientosVen;
      minimo(det1,det2,regD1,regD2,min);
    end;

    seek(mae, filepos(mae)-1);
    write(mae, regM);

  end;

  close(det1);
  close(det2);
  close(mae);
end;

procedure agregarAtras(var l, ult : lista; reg : vuelo);
var
  nue : lista;
begin
  new(nue);
  nue^.dato.destino := reg.destino;
  nue^.dato.fecha := reg.fecha;
  nue^.dato.hora := reg.hora;
  nue^.sig := nil;
  if(l = nil) then
    l := nue
  else
    ult^.sig := nue;
  ult := nue;
end;

procedure generarLista(var mae : maestro; var l : lista; cant : integer);
var
  regM : vuelo;
  ult : lista;
begin
  reset(mae);
  while(not eof(mae)) do begin
    read(mae, regM);
    if(regM.cantAsientos < cant) then
      agregarAtras(l,ult,regM);
  end;
  close(mae);
end;

procedure imprimirMaestro(var mae : maestro);
var
  reg : vuelo;
begin
  reset(mae);
  while(not eof(mae)) do begin
    read(mae, reg);
    writeln(reg.destino,' ',reg.hora,' ',reg.cantAsientos);
  end;
  close(mae);
end;

procedure imprimirlista(l : lista);
begin
  while(l <> nil) do begin
    writeln(l^.dato.destino);
    l := l^.sig;
  end;
end;

var
  fecha : TDateTime;
  mae : maestro;
  det1, det2 : detalle;
  i, cant : integer;
  l : lista;
begin
  clrscr;
  l := nil;

  fecha := Date;
  writeln('Fecha de hoy: ',DateToStr(fecha),' Hora: ',FormatDateTime('HH:NN:SS',Time()));

  assign(mae,'Vuelos');
  assign(det1,'Ventas1');
  assign(det2,'Ventas2');

  //cargarArchivo(mae);

  writeln('---- Sin actualizar ----');
  imprimirMaestro(mae);

  //cargarDetalle(det2);

  actualizarArchivo(mae,det1,det2);
  writeln('---- Actualizado ---');
  imprimirMaestro(mae);

  writeln;
  write('Ingrese cantidad ');
  readln(cant);
  generarLista(mae,l,cant);

  writeln;
  imprimirlista(l);

  readln;
end.